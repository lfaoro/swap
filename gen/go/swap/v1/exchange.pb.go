// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.5
// 	protoc        (unknown)
// source: swap/v1/exchange.proto

package v1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Exchange represents information about a cryptocurrency exchange
type Exchange struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The name of the exchange
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// The KYC rating of the exchange (e.g., "A", "B", "C")
	Rating string `protobuf:"bytes,2,opt,name=rating,proto3" json:"rating,omitempty"`
	// The insurance percentage offered by the exchange
	Insurance float64 `protobuf:"fixed64,3,opt,name=insurance,proto3" json:"insurance,omitempty"`
	// Whether the exchange supports markup
	EnabledMarkup bool `protobuf:"varint,4,opt,name=enabled_markup,json=enabledMarkup,proto3" json:"enabled_markup,omitempty"`
	// Estimated time (in minutes) for transaction processing
	Eta           float64 `protobuf:"fixed64,5,opt,name=eta,proto3" json:"eta,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Exchange) Reset() {
	*x = Exchange{}
	mi := &file_swap_v1_exchange_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Exchange) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Exchange) ProtoMessage() {}

func (x *Exchange) ProtoReflect() protoreflect.Message {
	mi := &file_swap_v1_exchange_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Exchange.ProtoReflect.Descriptor instead.
func (*Exchange) Descriptor() ([]byte, []int) {
	return file_swap_v1_exchange_proto_rawDescGZIP(), []int{0}
}

func (x *Exchange) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Exchange) GetRating() string {
	if x != nil {
		return x.Rating
	}
	return ""
}

func (x *Exchange) GetInsurance() float64 {
	if x != nil {
		return x.Insurance
	}
	return 0
}

func (x *Exchange) GetEnabledMarkup() bool {
	if x != nil {
		return x.EnabledMarkup
	}
	return false
}

func (x *Exchange) GetEta() float64 {
	if x != nil {
		return x.Eta
	}
	return 0
}

// ExchangeList contains a list of available exchanges
type ExchangeList struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// List of exchanges
	List          []*Exchange `protobuf:"bytes,1,rep,name=list,proto3" json:"list,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ExchangeList) Reset() {
	*x = ExchangeList{}
	mi := &file_swap_v1_exchange_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ExchangeList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExchangeList) ProtoMessage() {}

func (x *ExchangeList) ProtoReflect() protoreflect.Message {
	mi := &file_swap_v1_exchange_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExchangeList.ProtoReflect.Descriptor instead.
func (*ExchangeList) Descriptor() ([]byte, []int) {
	return file_swap_v1_exchange_proto_rawDescGZIP(), []int{1}
}

func (x *ExchangeList) GetList() []*Exchange {
	if x != nil {
		return x.List
	}
	return nil
}

var File_swap_v1_exchange_proto protoreflect.FileDescriptor

var file_swap_v1_exchange_proto_rawDesc = string([]byte{
	0x0a, 0x16, 0x73, 0x77, 0x61, 0x70, 0x2f, 0x76, 0x31, 0x2f, 0x65, 0x78, 0x63, 0x68, 0x61, 0x6e,
	0x67, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x07, 0x73, 0x77, 0x61, 0x70, 0x2e, 0x76,
	0x31, 0x22, 0x8d, 0x01, 0x0a, 0x08, 0x45, 0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x12, 0x12,
	0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x72, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x12, 0x1c, 0x0a, 0x09, 0x69, 0x6e,
	0x73, 0x75, 0x72, 0x61, 0x6e, 0x63, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x01, 0x52, 0x09, 0x69,
	0x6e, 0x73, 0x75, 0x72, 0x61, 0x6e, 0x63, 0x65, 0x12, 0x25, 0x0a, 0x0e, 0x65, 0x6e, 0x61, 0x62,
	0x6c, 0x65, 0x64, 0x5f, 0x6d, 0x61, 0x72, 0x6b, 0x75, 0x70, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x0d, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x4d, 0x61, 0x72, 0x6b, 0x75, 0x70, 0x12,
	0x10, 0x0a, 0x03, 0x65, 0x74, 0x61, 0x18, 0x05, 0x20, 0x01, 0x28, 0x01, 0x52, 0x03, 0x65, 0x74,
	0x61, 0x22, 0x35, 0x0a, 0x0c, 0x45, 0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x4c, 0x69, 0x73,
	0x74, 0x12, 0x25, 0x0a, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x11, 0x2e, 0x73, 0x77, 0x61, 0x70, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x78, 0x63, 0x68, 0x61, 0x6e,
	0x67, 0x65, 0x52, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x42, 0x62, 0x0a, 0x0b, 0x63, 0x6f, 0x6d, 0x2e,
	0x73, 0x77, 0x61, 0x70, 0x2e, 0x76, 0x31, 0x42, 0x0d, 0x45, 0x78, 0x63, 0x68, 0x61, 0x6e, 0x67,
	0x65, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x50, 0x01, 0x5a, 0x07, 0x73, 0x77, 0x61, 0x70, 0x2f, 0x76,
	0x31, 0xa2, 0x02, 0x03, 0x53, 0x58, 0x58, 0xaa, 0x02, 0x07, 0x53, 0x77, 0x61, 0x70, 0x2e, 0x56,
	0x31, 0xca, 0x02, 0x07, 0x53, 0x77, 0x61, 0x70, 0x5c, 0x56, 0x31, 0xe2, 0x02, 0x13, 0x53, 0x77,
	0x61, 0x70, 0x5c, 0x56, 0x31, 0x5c, 0x47, 0x50, 0x42, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74,
	0x61, 0xea, 0x02, 0x08, 0x53, 0x77, 0x61, 0x70, 0x3a, 0x3a, 0x56, 0x31, 0x62, 0x06, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x33,
})

var (
	file_swap_v1_exchange_proto_rawDescOnce sync.Once
	file_swap_v1_exchange_proto_rawDescData []byte
)

func file_swap_v1_exchange_proto_rawDescGZIP() []byte {
	file_swap_v1_exchange_proto_rawDescOnce.Do(func() {
		file_swap_v1_exchange_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_swap_v1_exchange_proto_rawDesc), len(file_swap_v1_exchange_proto_rawDesc)))
	})
	return file_swap_v1_exchange_proto_rawDescData
}

var file_swap_v1_exchange_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_swap_v1_exchange_proto_goTypes = []any{
	(*Exchange)(nil),     // 0: swap.v1.Exchange
	(*ExchangeList)(nil), // 1: swap.v1.ExchangeList
}
var file_swap_v1_exchange_proto_depIdxs = []int32{
	0, // 0: swap.v1.ExchangeList.list:type_name -> swap.v1.Exchange
	1, // [1:1] is the sub-list for method output_type
	1, // [1:1] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_swap_v1_exchange_proto_init() }
func file_swap_v1_exchange_proto_init() {
	if File_swap_v1_exchange_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_swap_v1_exchange_proto_rawDesc), len(file_swap_v1_exchange_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_swap_v1_exchange_proto_goTypes,
		DependencyIndexes: file_swap_v1_exchange_proto_depIdxs,
		MessageInfos:      file_swap_v1_exchange_proto_msgTypes,
	}.Build()
	File_swap_v1_exchange_proto = out.File
	file_swap_v1_exchange_proto_goTypes = nil
	file_swap_v1_exchange_proto_depIdxs = nil
}
