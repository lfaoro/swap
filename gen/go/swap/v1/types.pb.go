// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.5
// 	protoc        (unknown)
// source: swap/v1/types.proto

package v1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Support struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	TxUrl         string                 `protobuf:"bytes,1,opt,name=tx_url,json=txUrl,proto3" json:"tx_url,omitempty"`
	SupportUrl    string                 `protobuf:"bytes,2,opt,name=support_url,json=supportUrl,proto3" json:"support_url,omitempty"`
	Type          string                 `protobuf:"bytes,3,opt,name=type,proto3" json:"type,omitempty"`
	Tos           string                 `protobuf:"bytes,4,opt,name=tos,proto3" json:"tos,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Support) Reset() {
	*x = Support{}
	mi := &file_swap_v1_types_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Support) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Support) ProtoMessage() {}

func (x *Support) ProtoReflect() protoreflect.Message {
	mi := &file_swap_v1_types_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Support.ProtoReflect.Descriptor instead.
func (*Support) Descriptor() ([]byte, []int) {
	return file_swap_v1_types_proto_rawDescGZIP(), []int{0}
}

func (x *Support) GetTxUrl() string {
	if x != nil {
		return x.TxUrl
	}
	return ""
}

func (x *Support) GetSupportUrl() string {
	if x != nil {
		return x.SupportUrl
	}
	return ""
}

func (x *Support) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *Support) GetTos() string {
	if x != nil {
		return x.Tos
	}
	return ""
}

type Details struct {
	state              protoimpl.MessageState `protogen:"open.v1"`
	Hashout            string                 `protobuf:"bytes,1,opt,name=hashout,proto3" json:"hashout,omitempty"`
	Support            *Support               `protobuf:"bytes,2,opt,name=support,proto3" json:"support,omitempty"`
	Webhook            string                 `protobuf:"bytes,3,opt,name=webhook,proto3" json:"webhook,omitempty"`
	ExpiresAt          *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=expires_at,json=expiresAt,proto3" json:"expires_at,omitempty"`
	AmountBtc          float64                `protobuf:"fixed64,5,opt,name=amount_btc,json=amountBtc,proto3" json:"amount_btc,omitempty"`
	MarketrateCreation float64                `protobuf:"fixed64,6,opt,name=marketrate_creation,json=marketrateCreation,proto3" json:"marketrate_creation,omitempty"`
	OriginalEta        float64                `protobuf:"fixed64,7,opt,name=original_eta,json=originalEta,proto3" json:"original_eta,omitempty"`
	ProviderLogo       string                 `protobuf:"bytes,8,opt,name=provider_logo,json=providerLogo,proto3" json:"provider_logo,omitempty"`
	unknownFields      protoimpl.UnknownFields
	sizeCache          protoimpl.SizeCache
}

func (x *Details) Reset() {
	*x = Details{}
	mi := &file_swap_v1_types_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Details) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Details) ProtoMessage() {}

func (x *Details) ProtoReflect() protoreflect.Message {
	mi := &file_swap_v1_types_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Details.ProtoReflect.Descriptor instead.
func (*Details) Descriptor() ([]byte, []int) {
	return file_swap_v1_types_proto_rawDescGZIP(), []int{1}
}

func (x *Details) GetHashout() string {
	if x != nil {
		return x.Hashout
	}
	return ""
}

func (x *Details) GetSupport() *Support {
	if x != nil {
		return x.Support
	}
	return nil
}

func (x *Details) GetWebhook() string {
	if x != nil {
		return x.Webhook
	}
	return ""
}

func (x *Details) GetExpiresAt() *timestamppb.Timestamp {
	if x != nil {
		return x.ExpiresAt
	}
	return nil
}

func (x *Details) GetAmountBtc() float64 {
	if x != nil {
		return x.AmountBtc
	}
	return 0
}

func (x *Details) GetMarketrateCreation() float64 {
	if x != nil {
		return x.MarketrateCreation
	}
	return 0
}

func (x *Details) GetOriginalEta() float64 {
	if x != nil {
		return x.OriginalEta
	}
	return 0
}

func (x *Details) GetProviderLogo() string {
	if x != nil {
		return x.ProviderLogo
	}
	return ""
}

// QuoteList contains all quotes and related metadata
type QuoteList struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Quotes        []*QuoteDetails        `protobuf:"bytes,1,rep,name=quotes,proto3" json:"quotes,omitempty"`
	MinDeposit    float64                `protobuf:"fixed64,2,opt,name=min_deposit,json=minDeposit,proto3" json:"min_deposit,omitempty"`
	MaxDeposit    float64                `protobuf:"fixed64,3,opt,name=max_deposit,json=maxDeposit,proto3" json:"max_deposit,omitempty"`
	KycList       []string               `protobuf:"bytes,4,rep,name=kyc_list,json=kycList,proto3" json:"kyc_list,omitempty"`
	LogpolicyList []string               `protobuf:"bytes,5,rep,name=logpolicy_list,json=logpolicyList,proto3" json:"logpolicy_list,omitempty"`
	BestOnly      bool                   `protobuf:"varint,7,opt,name=best_only,json=bestOnly,proto3" json:"best_only,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *QuoteList) Reset() {
	*x = QuoteList{}
	mi := &file_swap_v1_types_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *QuoteList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QuoteList) ProtoMessage() {}

func (x *QuoteList) ProtoReflect() protoreflect.Message {
	mi := &file_swap_v1_types_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QuoteList.ProtoReflect.Descriptor instead.
func (*QuoteList) Descriptor() ([]byte, []int) {
	return file_swap_v1_types_proto_rawDescGZIP(), []int{2}
}

func (x *QuoteList) GetQuotes() []*QuoteDetails {
	if x != nil {
		return x.Quotes
	}
	return nil
}

func (x *QuoteList) GetMinDeposit() float64 {
	if x != nil {
		return x.MinDeposit
	}
	return 0
}

func (x *QuoteList) GetMaxDeposit() float64 {
	if x != nil {
		return x.MaxDeposit
	}
	return 0
}

func (x *QuoteList) GetKycList() []string {
	if x != nil {
		return x.KycList
	}
	return nil
}

func (x *QuoteList) GetLogpolicyList() []string {
	if x != nil {
		return x.LogpolicyList
	}
	return nil
}

func (x *QuoteList) GetBestOnly() bool {
	if x != nil {
		return x.BestOnly
	}
	return false
}

// QuoteDetails represents a single quote from a provider
type QuoteDetails struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	Provider       string                 `protobuf:"bytes,1,opt,name=provider,proto3" json:"provider,omitempty"`
	Kycrating      string                 `protobuf:"bytes,2,opt,name=kycrating,proto3" json:"kycrating,omitempty"`
	Logpolicy      string                 `protobuf:"bytes,3,opt,name=logpolicy,proto3" json:"logpolicy,omitempty"`
	Insurance      int32                  `protobuf:"varint,4,opt,name=insurance,proto3" json:"insurance,omitempty"`
	Fixed          string                 `protobuf:"bytes,5,opt,name=fixed,proto3" json:"fixed,omitempty"`
	AmountTo       string                 `protobuf:"bytes,6,opt,name=amount_to,json=amountTo,proto3" json:"amount_to,omitempty"`
	AmountFrom     string                 `protobuf:"bytes,14,opt,name=amount_from,json=amountFrom,proto3" json:"amount_from,omitempty"`
	Waste          string                 `protobuf:"bytes,7,opt,name=waste,proto3" json:"waste,omitempty"`
	Eta            float64                `protobuf:"fixed64,8,opt,name=eta,proto3" json:"eta,omitempty"`
	ProviderLogo   string                 `protobuf:"bytes,9,opt,name=provider_logo,json=providerLogo,proto3" json:"provider_logo,omitempty"`
	AmountTo_USD   string                 `protobuf:"bytes,10,opt,name=amount_to_USD,json=amountToUSD,proto3" json:"amount_to_USD,omitempty"`
	AmountFrom_USD string                 `protobuf:"bytes,11,opt,name=amount_from_USD,json=amountFromUSD,proto3" json:"amount_from_USD,omitempty"`
	RateId         *string                `protobuf:"bytes,12,opt,name=rate_id,json=rateId,proto3,oneof" json:"rate_id,omitempty"`
	AdId           *string                `protobuf:"bytes,13,opt,name=ad_id,json=adId,proto3,oneof" json:"ad_id,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *QuoteDetails) Reset() {
	*x = QuoteDetails{}
	mi := &file_swap_v1_types_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *QuoteDetails) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QuoteDetails) ProtoMessage() {}

func (x *QuoteDetails) ProtoReflect() protoreflect.Message {
	mi := &file_swap_v1_types_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QuoteDetails.ProtoReflect.Descriptor instead.
func (*QuoteDetails) Descriptor() ([]byte, []int) {
	return file_swap_v1_types_proto_rawDescGZIP(), []int{3}
}

func (x *QuoteDetails) GetProvider() string {
	if x != nil {
		return x.Provider
	}
	return ""
}

func (x *QuoteDetails) GetKycrating() string {
	if x != nil {
		return x.Kycrating
	}
	return ""
}

func (x *QuoteDetails) GetLogpolicy() string {
	if x != nil {
		return x.Logpolicy
	}
	return ""
}

func (x *QuoteDetails) GetInsurance() int32 {
	if x != nil {
		return x.Insurance
	}
	return 0
}

func (x *QuoteDetails) GetFixed() string {
	if x != nil {
		return x.Fixed
	}
	return ""
}

func (x *QuoteDetails) GetAmountTo() string {
	if x != nil {
		return x.AmountTo
	}
	return ""
}

func (x *QuoteDetails) GetAmountFrom() string {
	if x != nil {
		return x.AmountFrom
	}
	return ""
}

func (x *QuoteDetails) GetWaste() string {
	if x != nil {
		return x.Waste
	}
	return ""
}

func (x *QuoteDetails) GetEta() float64 {
	if x != nil {
		return x.Eta
	}
	return 0
}

func (x *QuoteDetails) GetProviderLogo() string {
	if x != nil {
		return x.ProviderLogo
	}
	return ""
}

func (x *QuoteDetails) GetAmountTo_USD() string {
	if x != nil {
		return x.AmountTo_USD
	}
	return ""
}

func (x *QuoteDetails) GetAmountFrom_USD() string {
	if x != nil {
		return x.AmountFrom_USD
	}
	return ""
}

func (x *QuoteDetails) GetRateId() string {
	if x != nil && x.RateId != nil {
		return *x.RateId
	}
	return ""
}

func (x *QuoteDetails) GetAdId() string {
	if x != nil && x.AdId != nil {
		return *x.AdId
	}
	return ""
}

var File_swap_v1_types_proto protoreflect.FileDescriptor

var file_swap_v1_types_proto_rawDesc = string([]byte{
	0x0a, 0x13, 0x73, 0x77, 0x61, 0x70, 0x2f, 0x76, 0x31, 0x2f, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x07, 0x73, 0x77, 0x61, 0x70, 0x2e, 0x76, 0x31, 0x1a, 0x1f,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f,
	0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22,
	0x67, 0x0a, 0x07, 0x53, 0x75, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x12, 0x15, 0x0a, 0x06, 0x74, 0x78,
	0x5f, 0x75, 0x72, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x78, 0x55, 0x72,
	0x6c, 0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x75, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x5f, 0x75, 0x72, 0x6c,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x73, 0x75, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x55,
	0x72, 0x6c, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x74, 0x6f, 0x73, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x03, 0x74, 0x6f, 0x73, 0x22, 0xbc, 0x02, 0x0a, 0x07, 0x44, 0x65, 0x74,
	0x61, 0x69, 0x6c, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x68, 0x61, 0x73, 0x68, 0x6f, 0x75, 0x74, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x68, 0x61, 0x73, 0x68, 0x6f, 0x75, 0x74, 0x12, 0x2a,
	0x0a, 0x07, 0x73, 0x75, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x10, 0x2e, 0x73, 0x77, 0x61, 0x70, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x75, 0x70, 0x70, 0x6f, 0x72,
	0x74, 0x52, 0x07, 0x73, 0x75, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x77, 0x65,
	0x62, 0x68, 0x6f, 0x6f, 0x6b, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x77, 0x65, 0x62,
	0x68, 0x6f, 0x6f, 0x6b, 0x12, 0x39, 0x0a, 0x0a, 0x65, 0x78, 0x70, 0x69, 0x72, 0x65, 0x73, 0x5f,
	0x61, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73,
	0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x65, 0x78, 0x70, 0x69, 0x72, 0x65, 0x73, 0x41, 0x74, 0x12,
	0x1d, 0x0a, 0x0a, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x62, 0x74, 0x63, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x01, 0x52, 0x09, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x42, 0x74, 0x63, 0x12, 0x2f,
	0x0a, 0x13, 0x6d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x72, 0x61, 0x74, 0x65, 0x5f, 0x63, 0x72, 0x65,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x01, 0x52, 0x12, 0x6d, 0x61, 0x72,
	0x6b, 0x65, 0x74, 0x72, 0x61, 0x74, 0x65, 0x43, 0x72, 0x65, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12,
	0x21, 0x0a, 0x0c, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x61, 0x6c, 0x5f, 0x65, 0x74, 0x61, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0b, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x61, 0x6c, 0x45,
	0x74, 0x61, 0x12, 0x23, 0x0a, 0x0d, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x5f, 0x6c,
	0x6f, 0x67, 0x6f, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x70, 0x72, 0x6f, 0x76, 0x69,
	0x64, 0x65, 0x72, 0x4c, 0x6f, 0x67, 0x6f, 0x22, 0xdb, 0x01, 0x0a, 0x09, 0x51, 0x75, 0x6f, 0x74,
	0x65, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x2d, 0x0a, 0x06, 0x71, 0x75, 0x6f, 0x74, 0x65, 0x73, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x73, 0x77, 0x61, 0x70, 0x2e, 0x76, 0x31, 0x2e,
	0x51, 0x75, 0x6f, 0x74, 0x65, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x52, 0x06, 0x71, 0x75,
	0x6f, 0x74, 0x65, 0x73, 0x12, 0x1f, 0x0a, 0x0b, 0x6d, 0x69, 0x6e, 0x5f, 0x64, 0x65, 0x70, 0x6f,
	0x73, 0x69, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0a, 0x6d, 0x69, 0x6e, 0x44, 0x65,
	0x70, 0x6f, 0x73, 0x69, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x6d, 0x61, 0x78, 0x5f, 0x64, 0x65, 0x70,
	0x6f, 0x73, 0x69, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0a, 0x6d, 0x61, 0x78, 0x44,
	0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x6b, 0x79, 0x63, 0x5f, 0x6c, 0x69,
	0x73, 0x74, 0x18, 0x04, 0x20, 0x03, 0x28, 0x09, 0x52, 0x07, 0x6b, 0x79, 0x63, 0x4c, 0x69, 0x73,
	0x74, 0x12, 0x25, 0x0a, 0x0e, 0x6c, 0x6f, 0x67, 0x70, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x5f, 0x6c,
	0x69, 0x73, 0x74, 0x18, 0x05, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0d, 0x6c, 0x6f, 0x67, 0x70, 0x6f,
	0x6c, 0x69, 0x63, 0x79, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x62, 0x65, 0x73, 0x74,
	0x5f, 0x6f, 0x6e, 0x6c, 0x79, 0x18, 0x07, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x62, 0x65, 0x73,
	0x74, 0x4f, 0x6e, 0x6c, 0x79, 0x22, 0xbf, 0x03, 0x0a, 0x0c, 0x51, 0x75, 0x6f, 0x74, 0x65, 0x44,
	0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64,
	0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64,
	0x65, 0x72, 0x12, 0x1c, 0x0a, 0x09, 0x6b, 0x79, 0x63, 0x72, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6b, 0x79, 0x63, 0x72, 0x61, 0x74, 0x69, 0x6e, 0x67,
	0x12, 0x1c, 0x0a, 0x09, 0x6c, 0x6f, 0x67, 0x70, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x6c, 0x6f, 0x67, 0x70, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x12, 0x1c,
	0x0a, 0x09, 0x69, 0x6e, 0x73, 0x75, 0x72, 0x61, 0x6e, 0x63, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x09, 0x69, 0x6e, 0x73, 0x75, 0x72, 0x61, 0x6e, 0x63, 0x65, 0x12, 0x14, 0x0a, 0x05,
	0x66, 0x69, 0x78, 0x65, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x66, 0x69, 0x78,
	0x65, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x74, 0x6f, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x54, 0x6f, 0x12,
	0x1f, 0x0a, 0x0b, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x66, 0x72, 0x6f, 0x6d, 0x18, 0x0e,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x46, 0x72, 0x6f, 0x6d,
	0x12, 0x14, 0x0a, 0x05, 0x77, 0x61, 0x73, 0x74, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x77, 0x61, 0x73, 0x74, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x65, 0x74, 0x61, 0x18, 0x08, 0x20,
	0x01, 0x28, 0x01, 0x52, 0x03, 0x65, 0x74, 0x61, 0x12, 0x23, 0x0a, 0x0d, 0x70, 0x72, 0x6f, 0x76,
	0x69, 0x64, 0x65, 0x72, 0x5f, 0x6c, 0x6f, 0x67, 0x6f, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0c, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x4c, 0x6f, 0x67, 0x6f, 0x12, 0x22, 0x0a,
	0x0d, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x74, 0x6f, 0x5f, 0x55, 0x53, 0x44, 0x18, 0x0a,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x54, 0x6f, 0x55, 0x53,
	0x44, 0x12, 0x26, 0x0a, 0x0f, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x66, 0x72, 0x6f, 0x6d,
	0x5f, 0x55, 0x53, 0x44, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x61, 0x6d, 0x6f, 0x75,
	0x6e, 0x74, 0x46, 0x72, 0x6f, 0x6d, 0x55, 0x53, 0x44, 0x12, 0x1c, 0x0a, 0x07, 0x72, 0x61, 0x74,
	0x65, 0x5f, 0x69, 0x64, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x06, 0x72, 0x61,
	0x74, 0x65, 0x49, 0x64, 0x88, 0x01, 0x01, 0x12, 0x18, 0x0a, 0x05, 0x61, 0x64, 0x5f, 0x69, 0x64,
	0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x48, 0x01, 0x52, 0x04, 0x61, 0x64, 0x49, 0x64, 0x88, 0x01,
	0x01, 0x42, 0x0a, 0x0a, 0x08, 0x5f, 0x72, 0x61, 0x74, 0x65, 0x5f, 0x69, 0x64, 0x42, 0x08, 0x0a,
	0x06, 0x5f, 0x61, 0x64, 0x5f, 0x69, 0x64, 0x42, 0x5f, 0x0a, 0x0b, 0x63, 0x6f, 0x6d, 0x2e, 0x73,
	0x77, 0x61, 0x70, 0x2e, 0x76, 0x31, 0x42, 0x0a, 0x54, 0x79, 0x70, 0x65, 0x73, 0x50, 0x72, 0x6f,
	0x74, 0x6f, 0x50, 0x01, 0x5a, 0x07, 0x73, 0x77, 0x61, 0x70, 0x2f, 0x76, 0x31, 0xa2, 0x02, 0x03,
	0x53, 0x58, 0x58, 0xaa, 0x02, 0x07, 0x53, 0x77, 0x61, 0x70, 0x2e, 0x56, 0x31, 0xca, 0x02, 0x07,
	0x53, 0x77, 0x61, 0x70, 0x5c, 0x56, 0x31, 0xe2, 0x02, 0x13, 0x53, 0x77, 0x61, 0x70, 0x5c, 0x56,
	0x31, 0x5c, 0x47, 0x50, 0x42, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0xea, 0x02, 0x08,
	0x53, 0x77, 0x61, 0x70, 0x3a, 0x3a, 0x56, 0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
})

var (
	file_swap_v1_types_proto_rawDescOnce sync.Once
	file_swap_v1_types_proto_rawDescData []byte
)

func file_swap_v1_types_proto_rawDescGZIP() []byte {
	file_swap_v1_types_proto_rawDescOnce.Do(func() {
		file_swap_v1_types_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_swap_v1_types_proto_rawDesc), len(file_swap_v1_types_proto_rawDesc)))
	})
	return file_swap_v1_types_proto_rawDescData
}

var file_swap_v1_types_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_swap_v1_types_proto_goTypes = []any{
	(*Support)(nil),               // 0: swap.v1.Support
	(*Details)(nil),               // 1: swap.v1.Details
	(*QuoteList)(nil),             // 2: swap.v1.QuoteList
	(*QuoteDetails)(nil),          // 3: swap.v1.QuoteDetails
	(*timestamppb.Timestamp)(nil), // 4: google.protobuf.Timestamp
}
var file_swap_v1_types_proto_depIdxs = []int32{
	0, // 0: swap.v1.Details.support:type_name -> swap.v1.Support
	4, // 1: swap.v1.Details.expires_at:type_name -> google.protobuf.Timestamp
	3, // 2: swap.v1.QuoteList.quotes:type_name -> swap.v1.QuoteDetails
	3, // [3:3] is the sub-list for method output_type
	3, // [3:3] is the sub-list for method input_type
	3, // [3:3] is the sub-list for extension type_name
	3, // [3:3] is the sub-list for extension extendee
	0, // [0:3] is the sub-list for field type_name
}

func init() { file_swap_v1_types_proto_init() }
func file_swap_v1_types_proto_init() {
	if File_swap_v1_types_proto != nil {
		return
	}
	file_swap_v1_types_proto_msgTypes[3].OneofWrappers = []any{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_swap_v1_types_proto_rawDesc), len(file_swap_v1_types_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   4,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_swap_v1_types_proto_goTypes,
		DependencyIndexes: file_swap_v1_types_proto_depIdxs,
		MessageInfos:      file_swap_v1_types_proto_msgTypes,
	}.Build()
	File_swap_v1_types_proto = out.File
	file_swap_v1_types_proto_goTypes = nil
	file_swap_v1_types_proto_depIdxs = nil
}
